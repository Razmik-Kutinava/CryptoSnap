import TelegramBot from 'node-telegram-bot-api';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
dotenv.config();

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ .env —Ñ–∞–π–ª–∞
const token = process.env.TOKEN || '8485812370:AAGVm0q_CCzcS6HflE4uc8AFXbRt0ECEFIM';

// URL –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ ngrok
const webAppUrl = process.env.WEBAPP_URL || 'https://crypto-snap-lilac.vercel.app';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(token, {polling: true});

console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
console.log('üåê URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', webAppUrl);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userName = msg.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  
  console.log(`üí¨ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} (${chatId}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞`);
  
  const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç, ${userName}! üëã\n\nüí∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö—Ä–∏–ø—Ç–æ –¢–∞–±–ª–æ!\n\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\nüìà –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\nüîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã\nüìä –ü–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:`;
  
  const options = {
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: "üì± –û—Ç–∫—Ä—ã—Ç—å –ö—Ä–∏–ø—Ç–æ –¢–∞–±–ª–æ",
            web_app: {
              url: webAppUrl
            }
          }
        ]
      ]
    }
  };
  
  bot.sendMessage(chatId, welcomeMessage, options);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const messageText = msg.text;
  
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
  if (messageText && !messageText.startsWith('/')) {
    console.log(`üìù –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${msg.from.first_name}: ${messageText}`);
    
    const responseMessage = `ü§ñ –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –ö—Ä–∏–ø—Ç–æ –¢–∞–±–ª–æ" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start`;
    
    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "üì± –û—Ç–∫—Ä—ã—Ç—å –ö—Ä–∏–ø—Ç–æ –¢–∞–±–ª–æ",
              web_app: {
                url: webAppUrl
              }
            }
          ]
        ]
      }
    };
    
    bot.sendMessage(chatId, responseMessage, options);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è web_app_data (–¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
bot.on('web_app_data', (msg) => {
  const chatId = msg.chat.id;
  const data = JSON.parse(msg.web_app_data.data);
  
  console.log('üìä –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', data);
  
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  bot.sendMessage(chatId, `‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: ${JSON.stringify(data)}`);
});

console.log(`üöÄ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å HTTPS!`);
console.log(`üåê URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${webAppUrl}`);
console.log(`üìù –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C`);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
bot.setMyCommands([
  {
    command: 'start',
    description: 'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ö—Ä–∏–ø—Ç–æ –¢–∞–±–ª–æ'
  }
]).then(() => {
  console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
}).catch((error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥:', error);
});